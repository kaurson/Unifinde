"""add_personality_summary_to_user

Revision ID: 88418add5469
Revises: e4bce9936b17
Create Date: 2025-08-07 14:05:50.347448

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '88418add5469'
down_revision: Union[str, None] = 'e4bce9936b17'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('questions', 'id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('questions', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=True)
    op.create_unique_constraint(None, 'questions', ['question_text'])
    op.alter_column('student_profiles', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('student_profiles', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('university_data_collection_results', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               nullable=False)
    op.alter_column('university_data_collection_results', 'subject_rankings',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'programs',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'student_life',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'financial_aid',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'international_students',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'alumni',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'source_urls',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('user_answers', 'id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('user_answers', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=True)
    op.add_column('users', sa.Column('personality_summary', sa.Text(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('users', 'personality_summary')
    op.alter_column('user_answers', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_answers', 'id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.alter_column('university_data_collection_results', 'source_urls',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'alumni',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'international_students',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'financial_aid',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'student_life',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'programs',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'subject_rankings',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('university_data_collection_results', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('student_profiles', 'user_id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('student_profiles', 'id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'questions', type_='unique')
    op.alter_column('questions', 'created_at',
               existing_type=sa.DATETIME(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('questions', 'id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    # ### end Alembic commands ###
